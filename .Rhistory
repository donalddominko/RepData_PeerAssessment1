color     =fips, # For two cities we make difference visible by color
ylab      ="Emissions in tons",
main      ="Baltimore City and Los Angeles Vehicle Emissions",
xlab      ="Year")
dftemp$emissions = as.integer(dftemp$emissions/1000)
qplot(year,
emissions,
data      =dftemp,
geom      =c("point","smooth"),
color     =fips, # For two cities we make difference visible by color
ylab      ="Emissions in tons",
main      ="Baltimore City and Los Angeles Vehicle Emissions",
xlab      ="Year")
dftemp = NEI
# Now let's subset Baltimore City and Los Angeles
dftemp = NEI[NEI$fips == "24510" | NEI$fips == "06037", ]
# We start subseting SCC by vehicle
dfVehicleSCC = SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE), ]
# Merge the two data frames by SCC
dftemp = merge(dftemp, dfVehicleSCC, by="SCC")
# After this we have the raw data for ploting
dftemp = aggregate(dftemp$Emissions, list(dftemp$year, dftemp$fips), sum)
# We add some proper names to our columns
colnames(dftemp) = c("year", "fips", "emissions")
# Convert into kilo tons
#dftemp$emissions = as.integer(dftemp$emissions/1000)
## Time to qplot something
qplot(year,
emissions,
data      =dftemp,
geom      =c("point","smooth"),
color     =fips, # For two cities we make difference visible by color
ylab      ="Emissions in tons",
main      ="Baltimore City and Los Angeles Vehicle Emissions",
xlab      ="Year")
## Now we save file to disk
dev.copy(png,
height         =260,
width          =480,
filename       ="plot6.png")
dev.off()
qplot(year,
emissions,
data      =dftemp,
geom      =c("point","smooth"),
color     =fips, # For two cities we make difference visible by color
ylab      ="Emissions in tons",
main      ="Baltimore City and Los Angeles Vehicle Emissions",
method    ="lm",
xlab      ="Year")
qplot(year,
emissions,
data      =dftemp,
geom      =c("point","smooth"),
color     =fips, # For two cities we make difference visible by color
ylab      ="Emissions in tons",
main      ="Baltimore City and Los Angeles Vehicle Emissions",
#method    ="lm",
xlab      ="Year")
rm(NEI,SCC,dfCoalSCC,dfVehicleSCC,vtfCoalSCC)
qplot(year,
emissions,
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore City (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
xlab      = "Year")
dev.copy(png,
height         = 260,
width          = 480,
filename       = "plot6.png")
dev.off()
qplot(year,
log(emissions), # Optional we could do "log(emissions)"
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore City (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
xlab      = "Year")
qplot(year,
emissions, # Optionaly we could do "log(emissions)"
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore City (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
xlab      = "Year",
scale_fill_discrete(name="City",
breaks=c("24510", "06037"),
labels=c("Baltimore", "LA"))
)
qplot(year,
emissions, # Optionaly we could do "log(emissions)"
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore City (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
xlab      = "Year"
)
qplot(year,
emissions, # Optionaly we could do "log(emissions)"
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
xlab      = "Year"
)
dev.copy(png,
height         = 260,
width          = 480,
filename       = "plot6.png")
dev.off()
a=c(1,2,3,4,1,2,3,4)
aa=c(1,3,4
)
df2$aa %in% df$a
df <- data.frame(a)
df2 <- data.frame(aa)
df2$aa %in% df$a
df2$aa
df$a
SCC = readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
names(SCC)
dfCoalSCC = SCC[grepl("coal",SCC$EI.Sector,ignore.case = TRUE), ]
dfCoalSCC = SCC[grepl("coal",SCC$EI.Sector,ignore.case = TRUE) |
grepl("In-process Fuel use",SCC$SCC.Level.Two,ignore.case = TRUE) |
grepl("coal",SCC$SCC.Level.Three,ignore.case = TRUE) |
grepl("fuel comb",SCC$EI.Sector,ignore.case = TRUE) |
grepl("coal-fired",SCC$SCC.Level.Four,ignore.case = TRUE) |
grepl("open burning",SCC$SCC.Level.Three,ignore.case = TRUE) |
grepl("coal",SCC$SCC.Level.Four,ignore.case = TRUE), ]
NEI = readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
dftemp = merge(dftemp, dfCoalSCC, by="SCC")
names(dfCoalSCC)
dftemp = NEI
dftemp = merge(dftemp, dfCoalSCC, by="SCC")
dftemp = aggregate(dftemp$Emissions, list(dftemp$year), sum)
colnames(dftemp) = c("year", "emissions")
dftemp$emissions = as.integer(dftemp$emissions/1000)
qplot(year,
emissions,
data =dftemp,
geom =c("point","smooth"),
#geom ="density",
ylab ="Emissions in kilo tons",
main ="US Coal Emissions",
xlab ="Year")
library(ggplot2)
qplot(year,
emissions,
data =dftemp,
geom =c("point","smooth"),
#geom ="density",
ylab ="Emissions in kilo tons",
main ="US Coal Emissions",
xlab ="Year")
dftemp = NEI
dftemp = NEI[NEI$fips == "24510", ]
dfVehicleSCC = SCC[grepl("motor",SCC$EI.Sector,ignore.case = TRUE), ]
dftemp = merge(dftemp, dfVehicleSCC, by="SCC")
rm(a,aa)
dfVehicleSCC = SCC[grepl("motor",SCC$Short.Name,ignore.case = TRUE), ]
dftemp = NEI
dftemp = NEI[NEI$fips == "24510", ]
NEI = readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
dftemp = NEI
dftemp = NEI[NEI$fips == "24510", ]
dftemp = merge(dftemp, dfVehicleSCC, by="SCC")
dftemp = aggregate(dftemp$Emissions, list(dftemp$year), sum)
colnames(dftemp) = c("year", "emissions")
qplot(year,
emissions,
data =dftemp,
geom =c("point","smooth"),
ylab ="Emissions in tons",
main ="Baltimore City Vehicle Emissions",
xlab ="Year")
dfVehicleSCC = SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE), ]
dftemp = NEI
dftemp = NEI[NEI$fips == "24510", ]
dfVehicleSCC = SCC[grepl("motor",SCC$Short.Name,ignore.case = TRUE), ]
dfVehicleSCC = SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE) | grepl("motor",SCC$Short.Name,ignore.case = TRUE), ]
SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE), ]
dfVehicleSCC = SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE), ]
dfVehicleSCC = SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE) | grepl("motor",SCC$Short.Name,ignore.case = TRUE), ]
dftemp = merge(dftemp, dfVehicleSCC, by="SCC")
dftemp = aggregate(dftemp$Emissions, list(dftemp$year), sum)
colnames(dftemp) = c("year", "emissions")
qplot(year,
emissions,
data =dftemp,
geom =c("point","smooth"),
ylab ="Emissions in tons",
main ="Baltimore City Vehicle Emissions",
xlab ="Year")
rm(df,df)
rm(df,df2,df)
rm(df,df2,dfCoalSCC,dftemp,dfVehicleSCC,NEI,SCC)
source('~/Documents/Workspace/__R/plot6.R')
plot6()
library(ggplot)
library(ggplot2)
plot6()
NEI = readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC = readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
# We put NEI into temp data frame
dftemp = NEI
# Now let's subset Baltimore City and Los Angeles
dftemp = NEI[NEI$fips == "24510" | NEI$fips == "06037", ]
# We start subseting SCC by vehicle
dfVehicleSCC = SCC[grepl("vehicle",SCC$EI.Sector,ignore.case = TRUE), ]
# Merge the two data frames by SCC
dftemp = merge(dftemp, dfVehicleSCC, by = "SCC")
# After this we have the raw data for ploting
dftemp = aggregate(dftemp$Emissions, list(dftemp$year, dftemp$fips), sum)
# We add some proper names to our columns
colnames(dftemp) = c("year", "fips", "emissions")
qplot(year,
emissions, # Optionaly we could do "log(emissions)"
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore City (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
scales = "free_y",
xlab      = "Year"
)
qplot(year,
emissions, # Optionaly we could do "log(emissions)"
data      = dftemp,
geom      = c("point","smooth"),
color     = fips, # Splits cities by color - red = LA, blue = Baltimore City
ylab      = "Emissions in tons",
main      = "Baltimore City (blue) and LA (red) Vehicle Emissions",
#method    = "lm", # Shows trends for LA and Baltimore
#scales = "free_y",
xlab      = "Year"
)
rm(NEI,SCC,dfVehicleSCC)
dfRead = read.table("activity.zip", sep = ",", header=T)
head(dfRead)
unzip("activity.zip")
fdRead = read.csv("activity.csv", sep = "," header=T)
fdRead = read.csv("activity.csv", sep = ",", header=T)
head(fdRead)
rm(dfRead,dfRead)
rm(fdRead)
dfRead = read.table("activity.zip", sep = ",", header=T)
dfRead = read.csv("activity.csv", sep = ",", header=T)
meadn(dfRead$steps)
mean(dfRead$steps)
mean(na.omit(dfRead$steps)
)
median(dfRead$steps)
median(na.omit(dfRead$steps))
mean(na.omit(dfRead$steps))
str(dfRead)
dim(dfRead)
agStepsSum = aggregate(dfRead$steps, list(date=dfRead$date), sum)
agStepsSum
agStepsMean = aggregate(dfRead$steps, list(date=dfRead$date), mean)
agStepsMean
summary(dfRead)
head(agStepsMean)
avg(agStepsMean$x)
agStepsMedian = aggregate(dfRead$steps, list(date=dfRead$date), median)
head(agStepsMedian)
agStepsMedian
agStepsMean
agStepsSum
hist(agStepsSum$x), col = "green")
hist(agStepsSum$x, col = "green")
hist(agStepsSum$x, col = "green", breaks=100)
hist(agStepsSum$x, col = "green", breaks=20)
hist(agStepsSum$x, col = "green", breaks=5)
hist(agStepsSum$x, col = "green", breaks=10)
hist(agStepsSum$x, col = "green", breaks=20)
hist(agStepsSum$x, col = "green", breaks=200)
hist(agStepsSum$x, col = "green", breaks=10)
rug(agStepsSum$x)
agStepsMean = aggregate(agStepsSum$x, list(date=agStepsSum$date), mean)
agStepsMean
agStepsMedian = aggregate(agStepsSum$x, list(date=agStepsSum$date), median)
agStepsMedian
hist(agStepsMean$x, col = "green", breaks=10)
hist(agStepsMedian$x, col = "green", breaks=10)
median(agStepsSum$x)
mean(agStepsSum$x)
mean(na.omit(agStepsSum$x))
median(na.omit(agStepsSum$x))
mean(na.omit(agStepsSum$x))
median(na.omit(agStepsSum$x))
hist(agStepsSum$x, col = "green", breaks=20)
hist(agStepsSum$x, col = "green", breaks=10)
average(na.omit(agStepsSum$x))
head(agStepsMean)
head(dfRead)
tail(dfRead)
tail(na.omit(dfRead))
summary(dfRead)
str(dfRead)
library(ggplot2)
agStepsMeanInt = aggreagate(dfRead$steps, list=(dfRead$interval), sum, na.rm=T)
agStepsMeanInt = aggregate(dfRead$steps, list=(dfRead$interval), sum, na.rm=T)
agStepsMeanInt = aggregate(dfRead$steps, list=(dfRead$interval), mean)
agStepsMeanInt = aggregate(dfRead$steps, list(dfRead$interval), mean, na.rm=T)
head(agStepsMeanInt)
tail(agStepsMeanInt)
nrow(agStepsMeanInt)
agStepsMeanInt = aggregate(steps=dfRead$steps, list(dfRead$interval), mean, na.rm=T)
names(agStepsMeanInt) = c("interval","daymean")
tail(agStepsMeanInt)
max(dfRead$interval)
agStepsMeanInt = aggregate(steps=dfRead$steps, list(dfRead$interval), mean)
agStepsMeanInt = aggregate(dfRead$steps, list(dfRead$interval), mean)
tail(agStepsMeanInt)
head(agStepsMeanInt)
agStepsMeanInt = aggregate(steps=dfRead$steps, list(dfRead$interval), mean, na.rm=T)
agStepsMeanInt = aggregate(dfRead$steps, list(dfRead$interval), mean, na.rm=T)
names(agStepsMeanInt) = c("interval","daymean")
agStepsMeanInt[max(agStepsMeanInt$daymean),]
1707/168
288-168
120/5
ggplot(agStepsMeanInt, aes(x=interval, y=daymean)) + geom_line() + xlab="Interval (5 minute)" + ylab("Average steps per day")
ggplot(agStepsMeanInt, aes(x=interval, y=daymean)) + geom_line() + xlab("Interval (5 minute)") + ylab("Average steps per day")
max(agStepsMeanInt$daymean)
agStepsMeanInt[max(agStepsMeanInt$daymean),]
agStepsMeanInt[which.max(agStepsMeanInt$daymean),]
?which
library(ggplot2)
ggplot(agStepsMeanInt, aes(x=interval, y=daymean)) + geom_line() + xlab("Interval (5 minute)") + ylab("Average steps per day")
sum(is.na(dfRead))
agStepsMean
agStepsSumInt = aggregate(dfRead$steps, list(dfRead$interval), sum, na.rm=F)
head(agStepsSumInt)
tail(agStepsSumInt)
agStepsSumInt = aggregate(dfRead$steps, list(dfRead$interval), sum, na.rm=T)
head(agStepsSumInt)
tail(agStepsSumInt)
colnames(agStepsSumInt) = c("inteval","sumsteps")
colnames(agStepsSumInt) = c("interval","sumsteps")
dftemp
?par
agStepsMean
agStepsMean2 = aggregate(agStepsSum$x, list(date=agStepsSum$date), mean)
agStepsMean2
agStepsMean2 = aggregate(agStepsSum$x, list(date=agStepsSum$date), mean, rm.na=F)
agStepsMean2
agStepsSum
agStepsMean2
rm(agStepsMean2)
agStepsSum
agStepsMean
agStepsMedian
head(agStepsMedian)
mean(agStepsMedian$x)
mean(agStepsMedian$x, na.rm=T)
median(agStepsMedian$x, na.rm=T)
rm(agStepsMedian,agStepsMean)
package("knitr")
install("knitr")
instal("knitr")
install.packages("knitr")
library(knitr)
agStepsSumImpute = agStepsSum
inMedian = median(agStepsSum$x, na.rm=T)
inMedian
is.na(agStepsSum$x)
which.is.na(agStepsSum$x)
agStepsSumImpute[is.na(agStepsSum$x)][1]
agStepsSumImpute[is.na(agStepsSum$x),][1]
agStepsSumImpute[is.na(agStepsSum$x),][2]
agStepsSumImpute[is.na(agStepsSum$x),]$x
agStepsSumImpute[is.na(agStepsSumImpute$x),]$x
agStepsSumImpute[is.na(agStepsSumImpute$x),]$x = inMedian
agStepsSumImpute
hist(agStepsSumImpute)
hist(agStepsSumImpute$x)
qplot(agStepsSumImpute$x, xlab='Total steps', ylab='Frequency')
library(ggplot)
library(ggplot2)
qplot(agStepsSumImpute$x, xlab='Total steps', ylab='Frequency')
hist(agStepsSumImpute$x, col = "green", breaks=10)
hist(agStepsSumImpute$x, col = "green", breaks=15)
hist(agStepsSumImpute$x, col = "green", breaks=20)
hist(agStepsSumImpute$x, col = "green", breaks=100)
hist(agStepsSumImpute$x, col = "green", breaks=20)
mean(agStepsSum$x, na.rm=T)
mean(agStepsSumImpute$x)
median(agStepsSum$x, na.rm=T)
median(agStepsSumImpute$x)
setwd("~/Documents/Workspace/__R/__Repos/Reproducible-Research/RepData_PeerAssessment1")
head(dfRead)
dfReadImpute = dfRead
dfReadImpute[is.na(dfReadImpute$steps),]$steps = inMedian
agStepsSumImpute = aggregate(dfReadImpute$steps, list(date=dfRead$date), sum)
head(agStepsSumImpute)
mean(agStepsSum$x, na.rm=T)
mean(agStepsSumImpute$x)
median(agStepsSum$x, na.rm=T)
median(agStepsSumImpute$x)
hist(agStepsSumImpute$x, col = "green")
qplot(agStepsSumImpute$x, xlab='Total steps', ylab='Frequency')
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","activity2.zip")
download.file("https://d396qusza40orc.cloudfront.net/repdata-data-activity.zip","activity2.zip")
library(curl)
download.file("https://d396qusza40orc.cloudfront.net/repdata-data-activity.zip","activity2.zip", method = "auto")
download.file("https://d396qusza40orc.cloudfront.net/repdata-data-activity.zip","activity2.zip", method = "curl")
agStepsSumImpute$wday = as.factor()
chDayLevels = c("Weekday", "Weekend")
agStepsSumImpute$wday = as.factor(NA,levels="Weekday", "Weekend)
")"
)
""
agStepsSumImpute$wday = as.factor(NA,levels="Weekday", "Weekend")
agStepsSumImpute$wday = NA
head(agStepsSumImpute)
head(sapply(agStepsSumImpute$date, x(){
ifelse(weekdays(agStepsSumImpute$date) %in%
c("Saturday", "Sunday"),"weekend", "weekday")
}))
summary(agStepsSumImpute)
dim(agStepsSumImpute)
str(agStepsSumImpute)
ifelse(weekdays(agStepsSumImpute$date) %in%
c("Saturday", "Sunday"),"weekend", "weekday")
weekdays(agStepsSumImpute$date)
class(agStepsSumImpute)
?ifelse
toWeekday = function(day){
ifelse(weekdays(day)
%in% c("Saturday", "Sunday"),"weekend", "weekday")
}
agStepsSumImpute$wday <- sapply(agStepsSumImpute$date, toWeekday)
str(agStepsSumImpute)
?as.date
head(as.Date(agStepsSumImpute$date))
agStepsSumImpute$wday <- sapply(as.Date(agStepsSumImpute$date)), toWeekday)
agStepsSumImpute$wday <- sapply(as.Date(agStepsSumImpute$date), toWeekday)
head(agStepsSumImpute)
agStepsSumImpute$wday = as.factor(sapply(as.Date(agStepsSumImpute$date), toWeekday))
str(agStepsSumImpute)
agStepsSumImpute$wday = null
agStepsSumImpute$wday = NULL
str(agStepsSumImpute)
toWeekday = function(day){
ifelse(weekdays(day)
%in% c("Saturday", "Sunday"),"weekend", "weekday")
}
agStepsSumImpute$wday = as.factor(sapply(as.Date(agStepsSumImpute$date), toWeekday))
str(agStepsSumImpute)
head(agStepsSumImpute)
head(agStepsSumImpute)
head(agStepsSumInt)
head(dfReadImpute)
agStepsSumImpute =
aggregate(dfReadImpute$steps, list(date=dfRead$date,dfRead$interval,), sum)
rm(agStepsSumImpute)
dfReadImpute = dfRead
# Now we set that to the median which was previously calculated
dfReadImpute[is.na(dfReadImpute$steps),]$steps = inMedian
# We do the computation again
agStepsSumImpute =
aggregate(dfReadImpute$steps, list(date=dfRead$date,dfRead$interval,), sum)
agStepsSumImpute =
aggregate(dfReadImpute$steps, list(date=dfRead$date,dfRead$interval), sum)
head(agStepsSumImpute)
names(agStepsSumImpute) = c("date","interval","daymean")
tail(agStepsSumImpute)
hist(agStepsSumImpute$daymean, col = "green", breaks=20)
head(agStepsSum)
agStepsSumImpute =
aggregate(dfReadImpute$steps, list(date=dfRead$date,dfRead$interval), sum)
names(agStepsSumImpute) = c("date","interval","daysum")
tail(agStepsSumImpute)
hist(agStepsSumImpute$daysum, col = "green", breaks=20)
mean(agStepsSum$daysum, na.rm=T)
mean(agStepsSumImpute$daysum)
median(agStepsSum$daysum, na.rm=T)
median(agStepsSumImpute$daysum)
names(agStepsSum) = c("interval","daysum")
mean(agStepsSum$daysum, na.rm=T)
mean(agStepsSumImpute$daysum)
median(agStepsSum$daysum, na.rm=T)
median(agStepsSumImpute$daysum)
head(agStepsMeanInt)
agStepsSum = aggregate(dfRead$steps,
list(date=dfRead$date,interval=dfRead$interval), sum)
head(agStepsSum)
hist(agStepsSum$daysum, col = "green", breaks=10)
names(agStepsSum) = c("date","interval","daysum")
hist(agStepsSum$daysum, col = "green", breaks=10)
hist(mean(agStepsSum$daysum, na.rm=T), col = "green", breaks=10)
hist(agStepsSum$daysum, col = "green", breaks=10)
mean(agStepsSum$daysum, na.rm=T)
inMedian = median(agStepsSum$daysum, na.rm=T)
inMedian
agStepsSum = aggregate(dfRead$steps,
#list(date=dfRead$date,interval=dfRead$interval), sum)
list(interval=dfRead$interval), sum)
head(agStepsSum)
